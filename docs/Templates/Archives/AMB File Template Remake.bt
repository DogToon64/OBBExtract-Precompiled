//------------------------------------------------
//  010 Editor v11.0.1 Binary Template
//  Author: Based off spec from OSA413, extended by Kass(RadiantDerg)
//  Created: 2021-07-27
//  Updated: 2023-12-16
//  Dimps AmFS: Memory Binder (.AMB)
//  Data is little endian (PC, 3DS); big endian(Console, Mobile)
//  !!!NOT SUPPORT WINPHONE!!!
//------------------------------------------------
#include "AMBStructs.h"

///   Check Endianness   ///
FSeek(12); ubyte flag<hidden=true>;

if (flag)
    BigEndian();
else
    LittleEndian();

FSeek(0);
////    ////    ////    ////

// = = = = = Globals = = = = =
//why am I doing globals LMAO just pass in data 4head
//local vars are hidden since I personally show locals in template results
local int64  fileLength                         <hidden=true> = FileSize();

local uint   g_version                          <hidden=true>;
local byte   g_compressionType                  <hidden=true>;

local uint   g_fileCount                        <hidden=true>;
local uint   g_listPointer                      <hidden=true>;
local uint   g_dataPointer                      <hidden=true>;
local uint   g_nameTable                        <hidden=true>;

local uint   g_filePointer                      <hidden=true>;
local uint   g_fileSize                         <hidden=true>;
// = = = = = Globals = = = = =


// = = = = = = = Structs = = = = = = = =
typedef struct BinderData
{
    local int   i         <hidden=true>;
    local int64 lastpos   <hidden=true> = FTell();
    local int   nameOffset<hidden=true>;
    
    for(i = 0; i < g_fileCount; i++)
    {
        struct
        {
            if(g_nameTable != 0)
            {
                lastpos = FTell();
                FSeek(g_nameTable+nameOffset);
                char FileName[32]               <name="File Name", fgcolor=0xA5A5A5, bgcolor=cDkYellow, comment="DIMPS EDITOR ONLY">;
                nameOffset = nameOffset + 32;
                FSeek(lastpos);
            }
			
            if (g_version == 32)
				FileIndexData a                 <name="Index Data", bgcolor=cAqua>;
			else if (g_version == 40)
				FileIndexDataRev1 a              <name="Index Data", bgcolor=cAqua>;
			else if (g_version == 48)
				FileIndexDataRev2 a              <name="Index Data", bgcolor=cAqua>;
			
            lastpos = FTell();
 
            if (g_fileSize != 0)
            {
                FSeek(g_filePointer);
                FileData a(g_fileSize)          <name="File Data", bgcolor=cDkGreen>;
            }
            
            FSeek(lastpos);

        }FileInfo<name="File">;
    }
};
// = = = = = = = Structs = = = = = = = =



///   File Start   ///

Header header                           <name="Header">;

if (g_version == 32)
{
    if (!g_compressionType)
    {
        SubHeader info                  <name="Sub Header", bgcolor=cSilver>;
        FSeek(g_listPointer);
        BinderData data                 <name="Contents">;
    }
    else
        CompressedBinder cmpData        <name="Contents (Compressed)", bgcolor=cDkGreen>;
}
else if (g_version == 40)
{
    if (!g_compressionType)
    {
        SubHeaderRev1 info              <name="Sub Header", bgcolor=cSilver>;
        FSeek(g_listPointer);
        BinderData data                 <name="Contents">;
    }
    else
        CompressedBinder cmpData        <name="Contents (Compressed)", bgcolor=cDkGreen>;
}
else if (g_version == 48)
{
    if (!g_compressionType)
    {
        SubHeaderRev2 info              <name="Sub Header", bgcolor=cSilver>;
        FSeek(g_listPointer);
        BinderData data                 <name="Contents">;
    }
    else
        CompressedBinder cmpData        <name="Contents (Compressed)", bgcolor=cDkGreen>;
}